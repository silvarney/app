# Generated by Django 5.2.6 on 2025-09-12 00:57

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Itens',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='TemplateCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('desktop_image', models.ImageField(upload_to='templates/desktop/', verbose_name='Imagem Desktop')),
                ('mobile_image', models.ImageField(upload_to='templates/mobile/', verbose_name='Imagem Mobile')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoria de Template',
                'verbose_name_plural': 'Categorias de Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlanType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('items', models.ManyToManyField(to='site_management.item', verbose_name='Itens')),
                ('template_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='site_management.templatecategory', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Tipo de Plano',
                'verbose_name_plural': 'Tipos de Planos',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=255, unique=True, verbose_name='Domínio')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('expired', 'Expirado'), ('suspended', 'Suspenso')], default='active', max_length=20, verbose_name='Status')),
                ('payment_date', models.DateTimeField(auto_now_add=True, verbose_name='Data de Pagamento')),
                ('payment_link', models.CharField(blank=True, max_length=500, verbose_name='Link de Pagamento')),
                ('contract_date', models.DateTimeField(auto_now_add=True, verbose_name='Data de Contratação')),
                ('expiration_date', models.DateTimeField(verbose_name='Data de Expiração')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='accounts.account', verbose_name='Conta')),
                ('plan_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='site_management.plantype', verbose_name='Plano')),
                ('template_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='site_management.templatecategory', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CTA',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, upload_to='sites/ctas/', verbose_name='Imagem')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('action_type', models.CharField(choices=[('whatsapp', 'Abrir WhatsApp'), ('contact_form', 'Preencher formulário de contato')], max_length=20, verbose_name='Ação do Botão')),
                ('button_text', models.CharField(max_length=100, verbose_name='Texto do Botão')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctas', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'CTA',
                'verbose_name_plural': 'CTAs',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='sites/banners/', verbose_name='Imagem')),
                ('link', models.URLField(blank=True, verbose_name='Link')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banners', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteAPIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key_prefix', models.CharField(db_index=True, max_length=16, verbose_name='Prefixo')),
                ('key_hash', models.CharField(max_length=128, unique=True, verbose_name='Hash')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nome de Referência')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='Último Uso')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Chave de API do Site',
                'verbose_name_plural': 'Chaves de API dos Sites',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteBio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título do Site')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('favicon', models.ImageField(blank=True, upload_to='sites/favicons/', verbose_name='Favicon')),
                ('logo', models.ImageField(upload_to='sites/logos/', verbose_name='Logo')),
                ('share_image', models.ImageField(blank=True, upload_to='sites/share/', verbose_name='Imagem de Compartilhamento')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('whatsapp', models.CharField(blank=True, max_length=20, verbose_name='WhatsApp')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('address', models.TextField(blank=True, verbose_name='Endereço')),
                ('google_maps', models.URLField(blank=True, verbose_name='Google Maps')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bio', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Bio do Site',
                'verbose_name_plural': 'Bios dos Sites',
            },
        ),
        migrations.CreateModel(
            name='SiteCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Ícone')),
                ('image', models.ImageField(blank=True, upload_to='sites/categories/', verbose_name='Imagem')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('is_blog', models.BooleanField(default=False, verbose_name='Categoria de Blog')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Categoria do Site',
                'verbose_name_plural': 'Categorias dos Sites',
                'ordering': ['order', 'name'],
                'unique_together': {('site', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Subtítulo')),
                ('image', models.ImageField(blank=True, upload_to='sites/services/', verbose_name='Imagem')),
                ('link', models.CharField(blank=True, max_length=255, verbose_name='Link')),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto (%)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='site_management.site', verbose_name='Site')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='site_management.sitecategory', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Título')),
                ('image', models.ImageField(blank=True, upload_to='sites/blog/', verbose_name='Imagem')),
                ('video_url', models.URLField(blank=True, verbose_name='URL do Vídeo')),
                ('content', models.TextField(blank=True, verbose_name='Texto')),
                ('link', models.URLField(blank=True, verbose_name='Link')),
                ('tags', models.CharField(blank=True, help_text='Separar por vírgulas', max_length=500, verbose_name='Tags')),
                ('is_published', models.BooleanField(default=False, verbose_name='Publicado')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de Publicação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to='site_management.site', verbose_name='Site')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='site_management.sitecategory', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Post do Blog',
                'verbose_name_plural': 'Posts do Blog',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Desconto (%)')),
                ('payment_link', models.CharField(blank=True, max_length=500, verbose_name='Link de Pagamento')),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('inactive', 'Inativa'), ('expired', 'Expirada'), ('canceled', 'Cancelada')], default='active', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_subscriptions', to='accounts.account', verbose_name='Conta')),
                ('plan_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='site_management.plantype', verbose_name='Plano Selecionado')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_type', models.CharField(choices=[('instagram', 'Instagram'), ('facebook', 'Facebook'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('telegram', 'Telegram'), ('web', 'Web')], max_length=20, verbose_name='Tipo')),
                ('url', models.URLField(verbose_name='URL')),
                ('icon_style', models.CharField(choices=[('outline', 'Contorno'), ('filled', 'Preenchido')], default='outline', max_length=10, verbose_name='Estilo do Ícone')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_networks', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Rede Social',
                'verbose_name_plural': 'Redes Sociais',
                'unique_together': {('site', 'network_type')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('items_list', models.TextField(verbose_name='Lista dos Itens')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Desconto')),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Total')),
                ('payment_month', models.PositiveIntegerField(verbose_name='Mês do Pagamento')),
                ('payment_year', models.PositiveIntegerField(verbose_name='Ano do Pagamento')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('failed', 'Falhou'), ('canceled', 'Cancelado')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='site_management.subscription', verbose_name='Assinatura')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-payment_year', '-payment_month'],
                'unique_together': {('subscription', 'payment_month', 'payment_year')},
            },
        ),
        migrations.CreateModel(
            name='SubscriptionItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor do Item')),
                ('title', models.CharField(max_length=200, verbose_name='Título do Item')),
                ('description', models.TextField(verbose_name='Descrição do Item')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='site_management.item', verbose_name='Item')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_items', to='site_management.subscription', verbose_name='Assinatura')),
            ],
            options={
                'verbose_name': 'Item da Assinatura',
                'verbose_name_plural': 'Itens da Assinatura',
                'unique_together': {('subscription', 'item')},
            },
        ),
    ]
