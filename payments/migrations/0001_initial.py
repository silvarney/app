# Generated by Django 5.2.6 on 2025-09-12 00:57

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('plan_type', models.CharField(choices=[('free', 'Gratuito'), ('basic', 'Básico'), ('premium', 'Premium'), ('enterprise', 'Empresarial')], default='basic', max_length=20, verbose_name='Tipo de Plano')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Preço')),
                ('setup_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Taxa de Configuração')),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Mensal'), ('quarterly', 'Trimestral'), ('yearly', 'Anual'), ('lifetime', 'Vitalício')], default='monthly', max_length=20, verbose_name='Ciclo de Cobrança')),
                ('max_users', models.PositiveIntegerField(default=1, verbose_name='Máximo de Usuários')),
                ('max_storage_gb', models.PositiveIntegerField(default=1, verbose_name='Armazenamento (GB)')),
                ('max_domains', models.PositiveIntegerField(default=1, verbose_name='Máximo de Domínios')),
                ('max_api_calls', models.PositiveIntegerField(default=1000, verbose_name='Máximo de Chamadas API')),
                ('features', models.JSONField(blank=True, default=dict, verbose_name='Recursos')),
                ('trial_days', models.PositiveIntegerField(default=0, verbose_name='Dias de Trial')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Destaque')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Plano',
                'verbose_name_plural': 'Planos',
                'ordering': ['sort_order', 'price'],
                'indexes': [models.Index(fields=['slug'], name='payments_pl_slug_2d55cc_idx'), models.Index(fields=['plan_type'], name='payments_pl_plan_ty_6d9c57_idx'), models.Index(fields=['is_active'], name='payments_pl_is_acti_83d6cf_idx')],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('trial', 'Trial'), ('active', 'Ativa'), ('past_due', 'Em Atraso'), ('canceled', 'Cancelada'), ('expired', 'Expirada'), ('suspended', 'Suspensa')], default='trial', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Iniciada em')),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True, verbose_name='Trial termina em')),
                ('current_period_start', models.DateTimeField(verbose_name='Período atual inicia em')),
                ('current_period_end', models.DateTimeField(verbose_name='Período atual termina em')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelada em')),
                ('ends_at', models.DateTimeField(blank=True, null=True, verbose_name='Termina em')),
                ('auto_renew', models.BooleanField(default=True, verbose_name='Renovação Automática')),
                ('price_snapshot', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço na Assinatura')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='accounts.account', verbose_name='Conta')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='payments.plan', verbose_name='Plano')),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor')),
                ('currency', models.CharField(default='BRL', max_length=3, verbose_name='Moeda')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('processing', 'Processando'), ('paid', 'Pago'), ('failed', 'Falhou'), ('canceled', 'Cancelado'), ('refunded', 'Reembolsado'), ('partially_refunded', 'Parcialmente Reembolsado')], default='pending', max_length=20, verbose_name='Status')),
                ('payment_method', models.CharField(choices=[('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('boleto', 'Boleto'), ('bank_transfer', 'Transferência Bancária'), ('paypal', 'PayPal'), ('stripe', 'Stripe')], max_length=20, verbose_name='Método de Pagamento')),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=200, verbose_name='ID da Transação no Gateway')),
                ('gateway_response', models.JSONField(blank=True, default=dict, verbose_name='Resposta do Gateway')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Vencimento')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Pago em')),
                ('failed_at', models.DateTimeField(blank=True, null=True, verbose_name='Falhou em')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('invoice_url', models.URLField(blank=True, verbose_name='URL da Fatura')),
                ('receipt_url', models.URLField(blank=True, verbose_name='URL do Recibo')),
                ('attempt_count', models.PositiveIntegerField(default=0, verbose_name='Tentativas')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Máximo de Tentativas')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.subscription', verbose_name='Assinatura')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Número da Fatura')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Impostos')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Desconto')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total')),
                ('currency', models.CharField(default='BRL', max_length=3, verbose_name='Moeda')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('open', 'Aberta'), ('paid', 'Paga'), ('void', 'Anulada'), ('uncollectible', 'Incobrável')], default='draft', max_length=20, verbose_name='Status')),
                ('issue_date', models.DateField(verbose_name='Data de Emissão')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('pdf_file', models.FileField(blank=True, upload_to='invoices/', verbose_name='Arquivo PDF')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice', to='payments.payment', verbose_name='Pagamento')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='payments.subscription', verbose_name='Assinatura')),
            ],
            options={
                'verbose_name': 'Fatura',
                'verbose_name_plural': 'Faturas',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['account', 'status'], name='payments_su_account_6c71ff_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['status'], name='payments_su_status_9a9040_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['current_period_end'], name='payments_su_current_d26b0c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['subscription', 'status'], name='payments_pa_subscri_b2eaa9_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='payments_pa_status_7ad4af_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway_transaction_id'], name='payments_pa_gateway_2a3159_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['due_date'], name='payments_pa_due_dat_752274_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='payments_in_invoice_3fa711_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['subscription', 'status'], name='payments_in_subscri_07a126_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='payments_in_status_45b876_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='payments_in_due_dat_9c830a_idx'),
        ),
    ]
