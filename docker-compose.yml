services:
  web:
    container_name: app_web
    build: .
    ports:
      - "8009:8000"  # host:container
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - DJANGO_SETTINGS_MODULE=saas_project.settings
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-H", "Host: app.criaremos.com", "-f", "http://127.0.0.1:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["gunicorn", "saas_project.wsgi:application", "--bind", "0.0.0.0:8000"]

  postgres:
    container_name: app_postgres
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgres-init:/docker-entrypoint-initdb.d/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5439:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    container_name: app_redis
    image: redis:7-alpine
    ports:
      - "6389:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  celery:
    container_name: app_celery
    build: .
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=saas_project.settings
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A saas_project worker --loglevel=info

  celery-beat:
    container_name: app_celery_beat
    build: .
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=saas_project.settings
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A saas_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data:
