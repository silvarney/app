version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn saas_project.wsgi:application --bind 0.0.0.0:8000"

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  celery:
    build: .
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    command: celery -A saas_project worker --loglevel=info

  celery-beat:
    build: .
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    command: celery -A saas_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data: